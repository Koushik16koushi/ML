Experiment 4
For a given set of training data examples stored in a .CSV
file, implement and demonstrate the Find-S algorithm to
output a description of the set of all hypotheses consistent
with the training examples.

Introduction to the Find-S Algorithm
What is the Find-S Algorithm?
The Find-S algorithm is a supervised learning algorithm used in concept learning to find
the most specific hypothesis that is consistent with a given set of positive training examples.
It is one of the simplest algorithms for learning from examples in a hypothesis space.

Importance of Find-S Algorithm
Helps in understanding how hypotheses are learned from training data.
Provides a structured way to generalize from specific instances.
Forms the foundation for more advanced machine learning algorithms.

Working of the Find-S Algorithm
The Find-S algorithm follows these steps:
1. Initialize the Hypothesis:
Start with the most specific hypothesis (i.e., all attributes set to the most restrictive
value).
2. Iterate Through Each Training Example:
If the example is positive (output = "Yes"), update the hypothesis:
Replace any attribute value in the hypothesis that is not consistent with the
example with a more general value ( ? ).
If the example is negative (output = "No"), ignore it.
3. Final Hypothesis:
After processing all positive examples, the final hypothesis represents the most
specific generalization of the training data.

Applying Find-S Algorithm to the Given Dataset
32

Training Dataset
The dataset contains five attributes:
Experience

Qualification

Skill

Age

Hired (Target)

Yes

Masters

Python

30

Yes

Yes

Bachelors

Python

25

Yes

No

Bachelors

Java

28

No

Yes

Masters

Java

40

Yes

No

Masters

Python

35

No

The target variable is "Hired" (Yes/No).
Only positive examples (Yes) are considered for hypothesis generation.
The algorithm will generate the most specific hypothesis that covers all positive
instances.

Understanding the Output Hypothesis
1. Initial Hypothesis
The algorithm starts with the most specific hypothesis:
h = ("Ø", "Ø", "Ø", "Ø") (empty hypothesis).

2. Iterative Learning Process
It generalizes step by step based on the positive training examples.
Attributes that differ among positive examples are replaced with ? (wildcard).

3. Final Hypothesis
The final hypothesis is the most specific generalization covering all positive examples.
It represents a logical rule derived from the dataset.

Limitations of Find-S
Only considers positive examples: It ignores negative examples, which may lead to an
incomplete hypothesis.
Cannot handle noise or missing data: Works only when training data is perfect.
Finds only one hypothesis: Does not provide alternative consistent hypotheses.

Understanding Find-S Algorithm and Hypothesis Concept

33

The Find-S algorithm is a simple machine-learning algorithm used in concept learning. It
finds the most specific hypothesis that is consistent with all positive examples in a given
training dataset. The algorithm assumes:
The target concept is represented in a binary classification
(yes/no, true/false, etc.).
The hypothesis space uses conjunctive attributes (each attribute in
a hypothesis must match exactly).
There is at least one positive example in the dataset.
In [2]: import pandas as pd
data = pd.read_csv(r"C:\Users\vijay\Desktop\Machine Learning Course Batches\FDP_ML_
In [5]: print(data)
0
1
2
3
4

Experience Qualification
Yes
Masters
Yes
Bachelors
No
Bachelors
Yes
Masters
No
Masters

Skill
Python
Python
Java
Java
Python

Age Hired
30
Yes
25
Yes
28
No
40
Yes
35
No

In [4]: def find_s_algorithm(data):
"""Implements the Find-S algorithm to find the most specific hypothesis."""
# Extract feature columns and target column
attributes = data.iloc[:, :-1].values # All columns except last
target = data.iloc[:, -1].values # Last column (class labels)
# Step 1: Initialize hypothesis with first positive example
for i in range(len(target)):
if target[i] == "Yes": # Consider only positive examples
hypothesis = attributes[i].copy()
break
# Step 2: Update hypothesis based on other positive examples
for i in range(len(target)):
if target[i] == "Yes":
for j in range(len(hypothesis)):
if hypothesis[j] != attributes[i][j]:
hypothesis[j] = '?' # Generalize inconsistent attributes
return hypothesis

# Run Find-S Algorithm
final_hypothesis = find_s_algorithm(data)
# Print the learned hypothesis
print("Most Specific Hypothesis:", final_hypothesis)
Most Specific Hypothesis: ['Yes' '?' '?' '?']

34

